/// <reference types="node" />
import { KeyValue } from "./index";
export declare const VERSION_1 = 1;
export declare const NULL_REQUEST_ID = 0;
export declare const DONT_KEEP_CONN = 0;
export declare const KEEP_CONN = 1;
export declare const ROLE: {
    RESPONDER: number;
    AUTHORIZER: number;
    FILTER: number;
};
export declare const MSG: {
    BEGIN_REQUEST: number;
    ABORT_REQUEST: number;
    END_REQUEST: number;
    PARAMS: number;
    STDIN: number;
    STDOUT: number;
    STDERR: number;
    DATA: number;
    GET_VALUES: number;
    GET_VALUES_RESULT: number;
    UNKNOWN_TYPE: number;
};
export declare const STATUS: {
    REQUEST_COMPLETE: number;
    CANT_MPX_CONN: number;
    OVERLOADED: number;
    UNKNOWN_ROLE: number;
};
export declare function GetMsgType(type: number): string | undefined;
export declare function createHeader(version: number, type: number, requestId: number, contentLength: number, paddingLength: number): Buffer;
export declare type Record = {
    version: number;
    type: number;
    requestId: number;
    contentLength: number;
    paddingLength: number;
    content: Buffer;
    recordLength: number;
};
export declare function parseHeader(buff: Buffer): Record | null;
export declare function createBeginRequestBody(role: number, flags: number): Buffer;
export declare function createKeyValueBufferFromObject(object: KeyValue): Buffer;
export declare function createKeyValueBuffer(key: string, valueArg: Buffer | number | string): Buffer;
export declare function parseEndRequest(buff: Buffer): {
    appStatus: number;
    protocolStatus: number;
};
